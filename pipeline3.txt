package main

import "fmt"

// https://go.dev/blog/pipelines

// pipeline
// Fan-out, fan-in

func main() {
	// Set up the pipeline.
	// c := gen(2, 3)
	// out := sq(c)

	// // Consume the output.
	// fmt.Println(<-out) // 4
	// fmt.Println(<-out) // 9

	for n := range sq(sq(gen(2, 3))) {
		fmt.Println(n) // 16 then 81
	}
}

func gen(nums ...int) <-chan int {
	out := make(chan int)
	go func() {
		for _, n := range nums {
			out <- n
		}
		close(out)
	}()
	return out
}

func sq(in <-chan int) <-chan int {
	out := make(chan int)
	go func() {
		for n := range in {
			out <- n * n
		}
		close(out)
	}()
	return out
}
